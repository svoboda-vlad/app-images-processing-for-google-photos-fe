{"version":3,"sources":["./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/navbar/navbar.component.html","./src/app/shared/auth.guard.ts","./src/app/shared/error-response.service.ts","./src/app/home/home.component.html","./src/app/app.component.ts","./src/app/user/user.service.ts","./src/app/app.component.html","./src/app/login/login.service.ts","./src/app/app.module.ts","./src/app/shared/auth.interceptor.ts","./src/app/home/home.component.scss","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.scss","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LoginService } from '../login/login.service';\nimport { UserService, User } from '../user/user.service';\n\n@Component({\n  selector: 'ipfgp-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  currentUser$: Observable<User> | null = null;\n\n  constructor(private router: Router, private userService: UserService, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.currentUser$ = this.userService.getCurrentUser()\n      .pipe(\n        catchError((err) => {\n          this.loginService.logOut();\n          this.userService.logOut();\n          this.router.navigate(['/login']);\n          return throwError(err);\n        })\n      );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  SERVER_URL: 'http://localhost:8080/',\n  GOOGLE_CLIENT_ID: '733460469950-rnm4b6pek82bfrnd8f5hf5esa5an0ikk.apps.googleusercontent.com',\n  FRONT_END_URL: 'http://localhost:4200/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","export default \"<div class=\\\"p-3\\\">\\n  <h2>Images Processing For Google Photos</h2>\\n</div>\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#navbarTogglerDemo01\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>-->\\n    <!-- <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo01\\\">  -->\\n    <div class=\\\"navbar-collapse\\\" id=\\\"navbarTogglerDemo01\\\">\\n      <ul class=\\\"navbar-nav me-auto mb-2 mb-lg-0\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"isLoggedIn()\\\">\\n          <a routerLink=\\\"/parameters\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Parameters</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"isLoggedIn()\\\">\\n          <a routerLink=\\\"/user\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">User Info</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"isLoggedIn()\\\">\\n          <span *ngIf=\\\"isAdmin()\\\">\\n            <a routerLink=\\\"/admin/parameters-default\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Admin - Parameters (default)</a>\\n          </span>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"isLoggedIn()\\\">\\n          <span *ngIf=\\\"isAdmin()\\\">\\n            <a routerLink=\\\"/admin/users\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Admin - Users</a>\\n          </span>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <span [ngSwitch]=\\\"isLoggedIn()\\\">\\n            <a *ngSwitchCase=\\\"false\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Log in</a>\\n            <a *ngSwitchDefault (click)=\\\"logout()\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Log out</a>\\n          </span>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!isLoggedIn()\\\">\\n          <a routerLink=\\\"/registration-user\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">User Registration</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserService } from '../user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private userService: UserService) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.userService.getCurrentUser().pipe(\n      map(user => {\n        if (user) {\n          const role = route.data['role'];\n\n          if (!role || role.length === 0) {\n            return true;\n          }\n\n          const userRoles = user.userRoles.find(r => r.role.name == role);\n          if (userRoles) return true;\n\n          this.router.navigate(['/home']);\n          return false;\n        }\n\n        this.router.navigate(['/login']);\n        return false;\n      })\n    );\n\n\n  }\n\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorResponseService {\n\n  private errorMessage: string = \"\";\n\n  constructor() { }\n\n  handleError(res: HttpErrorResponse): Observable<never> {\n    if (res.status != 0) {\n      this.errorMessage = 'Error response: ' + res.status + (res.error ? ' ' + res.error.error : '');\n    }\n    else {\n      this.errorMessage = 'Server not available';\n    }\n    return throwError(this.errorMessage);\n  }\n\n}\n","export default \"<h2>Home</h2>\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"currentUser$ | async as currentUser; else loadingOrError\\\">\\n  <div>Logged in as user {{ currentUser.givenName }} {{ currentUser.familyName }} ({{ currentUser.username }}).</div>\\n  <div>Previous login {{ currentUser.previousLoginDateTime | date:'yyyy-MM-dd HH:mm' }}.</div>\\n</div>\\n\\n<ng-template #loadingOrError>\\n    <div>Loading ...</div>\\n</ng-template>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ipfgp-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'images-processing-for-google-photos';\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { catchError, map } from 'rxjs/operators';\nimport { ErrorResponseService } from '../shared/error-response.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userUrl = 'user';\n  private user: User | null = null;\n\n  constructor(private http: HttpClient,\n    private errorResponseService: ErrorResponseService) { }\n\n  getCurrentUser() : Observable<User> {\n    return this.http.get<User>(environment.SERVER_URL + this.userUrl)\n    .pipe(map(res => this.user = res),\n    catchError(this.errorResponseService.handleError));\n  }\n\n  isLoggedIn(): boolean {\n    return this.user !== null;\n  }\n\n  isAdmin(): boolean {\n    if (this.user == null) return false;\n    return this.user.userRoles.filter(r => r.role.name == 'ROLE_ADMIN').length != 0;\n  }\n\n  logOut(): void {\n    this.user = null;\n  }\n\n  registerUser(registrationUser: RegistrationUser) : Observable<RegistrationUser> {\n    return this.http.post<RegistrationUser>(environment.SERVER_URL + this.userUrl, registrationUser).pipe(\n      catchError(this.errorResponseService.handleError));\n  }\n\n  deleteUser() : Observable<void> {\n    return this.http.delete<void>(environment.SERVER_URL + this.userUrl).pipe(\n      catchError(this.errorResponseService.handleError));\n  }\n\n  updateUser(user: User) : Observable<User> {\n    return this.http.put<User>(environment.SERVER_URL + this.userUrl, user).pipe(\n      catchError(this.errorResponseService.handleError));\n  }\n\n}\n\nexport class User {\n  username: string;\n  lastLoginDateTime: Date;\n  previousLoginDateTime: Date;\n  givenName: Date;\n  familyName: Date;\n  userRoles: UserRoles[];\n\n  constructor(username: string, lastLoginDateTime: Date, previousLoginDateTime: Date, givenName: Date, familyName: Date, userRoles: UserRoles[]) {\n      this.username = username;\n      this.lastLoginDateTime = lastLoginDateTime;\n      this.previousLoginDateTime = previousLoginDateTime;\n      this.givenName = givenName;\n      this.familyName = familyName;\n      this.userRoles = userRoles;\n    }\n\n}\n\nexport class UserRoles {\n  role: Role;\n\n  constructor(role: Role) {\n    this.role = role;\n  }\n}\n\nexport class Role {\n  name: string;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n}\n\nexport class RegistrationUser {\n  username: string;\n  password: string;\n  givenName: string;\n  familyName: string;\n\n  constructor(username: string, password: string, givenName: string, familyName: string) {\n    this.username = username;\n    this.password = password;\n    this.givenName = givenName;\n    this.familyName = familyName;\n  }\n}\n","export default \"<ipfgp-navbar></ipfgp-navbar>\\n<div class=\\\"mb-2 p-3 bg-light\\\">\\n  <div class=\\\"bg-white mb-2 p-3\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ErrorResponseService } from '../shared/error-response.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  loginUrl = 'login';\n  authorizationHeader = 'Authorization';\n  jwtKey = 'jwt';\n\n  constructor(private http: HttpClient,\n    private errorResponseService: ErrorResponseService) { }\n\n  logIn(user: LoginCredentials): Observable<void> {\n    return this.http.post(environment.SERVER_URL + this.loginUrl, user, { observe: 'response' })\n      .pipe(map(res => {\n        const token = res.headers.get(this.authorizationHeader);\n        if (token != null) localStorage.setItem(this.jwtKey, token);\n      }),\n        catchError(this.errorResponseService.handleError)\n      );\n  }\n\n  getJwtToken(): string | null {\n    return localStorage.getItem(this.jwtKey);\n  }\n\n  logOut(): void {\n    localStorage.removeItem(this.jwtKey);\n  }\n\n}\n\nexport class LoginCredentials {\n  username: string;\n  password: string;\n\n  constructor(u: string, p: string) {\n    this.username = u;\n    this.password = p;\n  }\n}\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AuthInterceptor } from './shared/auth.interceptor';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../login/login.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private loginService: LoginService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (!request.url || (request.url.startsWith('http') && !(environment.SERVER_URL && request.url.startsWith(environment.SERVER_URL)))) {\n      return next.handle(request);\n    }\n\n    const token = this.loginService.getJwtToken();\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user/user.service';\nimport { LoginService } from '../login/login.service';\n\n@Component({\n  selector: 'ipfgp-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private loginService: LoginService,\n    private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  isLoggedIn(): boolean {\n    return this.userService.isLoggedIn();\n  }\n\n  isAdmin(): boolean {\n    return this.userService.isAdmin();\n  }\n\n  logout(): void {\n    this.loginService.logOut();\n    this.userService.logOut();\n    this.router.navigate(['/login']);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuYXZiYXIuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './shared/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n  },\n  {\n    path: 'registration-user',\n    loadChildren: () => import('./registration-user/registration-user.module').then(m => m.RegistrationUserModule)\n  },\n  {\n    path: 'google-login',\n    loadChildren: () => import('./google-login/google-login.module').then(m => m.GoogleLoginModule)\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n    data: {\n      role: 'ROLE_ADMIN'\n    },\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'user',\n    loadChildren: () => import('./user/user.module').then(m => m.UserModule)\n  },\n  {\n    path: 'parameters',\n    loadChildren: () => import('./parameters/parameters.module').then(m => m.ParametersModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}