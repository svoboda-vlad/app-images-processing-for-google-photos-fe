{"version":3,"sources":["./src/app/google-login/google-login-routing.module.ts","./src/app/google-login/google-login.module.ts","./src/app/google-login/google-login.component.scss","./src/app/google-login/google-login.service.ts","./src/app/google-login/google-login.component.html","./src/app/google-login/google-login.component.ts"],"names":[],"mappings":"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","file":"google-login-google-login-module.921e3bc54b8a56dce2f6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GoogleLoginComponent } from './google-login.component';\n\nconst routes: Routes = [{ path: '', component: GoogleLoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GoogleLoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoogleLoginRoutingModule } from './google-login-routing.module';\nimport { GoogleLoginComponent } from './google-login.component';\n\n\n@NgModule({\n  declarations: [\n    GoogleLoginComponent\n  ],\n  imports: [\n    CommonModule,\n    GoogleLoginRoutingModule\n  ]\n})\nexport class GoogleLoginModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnb29nbGUtbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ErrorResponseService } from '../shared/error-response.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleLoginService {\n\n  googleLoginUrl = \"google-login\";\n  authorizationHeader = \"Authorization\";\n  jwtKey = \"jwt\";\n\n  constructor(private http: HttpClient,\n    private errorResponseService: ErrorResponseService) { }\n\n  logIn(idToken: IdTokenGoogle): Observable<void> {\n    return this.http.post(environment.SERVER_URL + this.googleLoginUrl, idToken, { observe: 'response' })\n      .pipe(map(res => {\n        const token = res.headers.get(this.authorizationHeader);\n        if (token != null) localStorage.setItem(this.jwtKey, token);\n      }),\n        catchError(this.errorResponseService.handleError)\n      );\n  }\n\n  getJwtToken(): string | null {\n    return localStorage.getItem(this.jwtKey);\n  }\n\n  logOut(): void {\n    localStorage.removeItem(this.jwtKey);\n  }\n\n}\n\nexport class IdTokenGoogle {\n  idToken: string;\n\n  constructor(i: string) {\n    this.idToken = i;\n  }\n}\n","export default \"<div *ngIf=\\\"googleLogin$ | async; else loadingOrError\\\">\\n</div>\\n\\n<ng-template #loadingOrError>\\n  <ng-container *ngIf=\\\"error; else loading\\\">\\n    <div class=\\\"alert alert-danger\\\">{{ error }}</div>\\n  </ng-container>\\n  <ng-template #loading>\\n    <div>Loading ...</div>\\n  </ng-template>\\n</ng-template>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { UserService } from '../user/user.service';\nimport { GoogleLoginService, IdTokenGoogle } from './google-login.service';\n\n@Component({\n  selector: 'ipfgp-google-login',\n  templateUrl: './google-login.component.html',\n  styleUrls: ['./google-login.component.scss']\n})\nexport class GoogleLoginComponent implements OnInit {\n\n  accessTokenKey = \"access_token\";\n  error: Object | null = null;\n  googleLogin$: Observable<void> | null = null;\n\n  constructor(private router: Router,\n    private googleLoginService: GoogleLoginService,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    let accessToken = \"\";\n    let idToken = \"\";\n    const hashParams = location.hash.replace(\"#\",\"\").split(\"&\");\n    hashParams.forEach((param) => {\n      const p = param.split(\"=\");\n      if (p[0] == \"access_token\") accessToken = p[1];\n      if (p[0] == \"id_token\") idToken = p[1];\n    });\n    localStorage.setItem(this.accessTokenKey, accessToken);\n    const idTokenGoogle: IdTokenGoogle = new IdTokenGoogle(idToken);\n\n    this.googleLogin$ = this.googleLoginService\n      .logIn(idTokenGoogle)\n      .pipe(\n        concatMap(\n          () => this.userService.getCurrentUser().pipe(\n            map(() => {\n              this.router.navigate(['']);\n             })\n             )\n          ),\n          catchError(err => {\n            this.error = err;\n            return throwError(err);\n          })\n      );\n  }\n\n}\n"],"sourceRoot":"webpack:///"}